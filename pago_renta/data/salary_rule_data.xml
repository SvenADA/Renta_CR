<?xml version="1.0" encoding="UTF-8" ?>
<odoo>
    <!-- Perceptions -->
    <record id="hr_rule_l10n_cr_payroll_perception_base" model="hr.salary.rule">
        <field name="name">Salario Base de Referencia</field>
        <field name="sequence" eval="1000" />
        <field name="code">BASIC</field>
        <field name="category_id" ref="hr_payroll.BASIC" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            <!--aqui va el codigo-->
        </field>
    </record>

    <!--Comisiones rule and input-->
    <record id="hr_rule_l10n_cr_payroll_commission" model="hr.salary.rule">
        <field name="name">Comisiones</field>
        <field name="sequence" eval="1001" />
        <field name="code">COMMISSIONS</field>
        <field name="category_id" ref="hr_payroll.BASIC" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.commission</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = inputs.commission and inputs.commission.amount
        </field>
    </record>
    <record id="hr_payslip_input_commission" model="hr.payslip.input.type">
        <field name="code">commission</field>
        <field name="name">Comisiones</field>
        <field name="struct_ids" eval="[(6, 0, [ref('l10n_cr_hr_payroll.payroll_structure_data_l10n_cr')])]" />
    </record>

    <!--Vacaciones rule-->
    <record id="hr_rule_l10n_cr_payroll_perception_holidays" model="hr.salary.rule">
        <field name="name">Vacaciones</field>
        <field name="sequence" eval="1005" />
        <field name="code">P002</field>
        <field name="category_id" ref="hr_payroll.BASIC" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="condition_select">python</field>
        <field
            name="condition_python"
        >result = contract.company_id.l10n_cr_holidays_provision and worked_days.dict.get('LEAVE120')</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
holidays = worked_days.LEAVE120.number_of_days or 0.0
result = contract.l10n_cr_edi_daily_wage * holidays
        </field>
    </record>

    <!--Extras rule and inputs-->
    <record id="hr_rule_l10n_cr_payroll_perception_extras" model="hr.salary.rule">
        <field name="name">EXTRAS</field>
        <field name="sequence" eval="1030" />
        <field name="code">P005</field>
        <field name="category_id" ref="hr_salary_rule_category_hr_salary_rule_category_bruto" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            wage = contract.l10n_cr_edi_daily_wage * 7 * 52 / 365 / 8
            extra = inputs.extra and inputs.extra.amount
            result = (wage * extra * 1.5) if extra else 0
            double = inputs.extra_doble and inputs.extra_doble.amount
            result += (wage * double * 1.5 * 2) if double else 0
            holiday = inputs.feriado and inputs.feriado.amount
            result += wage * holiday
        </field>
    </record>
    <record id="hr_payslip_input_type_perception_extras" model="hr.payslip.input.type">
        <field name="code">extra</field>
        <field name="name">Extras tiempo y medio</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_l10n_cr')])]" />
    </record>
    <record id="hr_payslip_input_type_perception_extras_double" model="hr.payslip.input.type">
        <field name="code">extra_doble</field>
        <field name="name">Extras Doble</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_l10n_cr')])]" />
    </record>
    <record id="hr_payslip_input_type_perception_extras_holiday" model="hr.payslip.input.type">
        <field name="code">feriado</field>
        <field name="name">Feriado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_l10n_cr')])]" />
    </record>

    <!--Inabilities rule and inputs-->
    <record id="hr_rule_l10n_cr_payroll_inc_ins" model="hr.salary.rule">
        <field name="name">Incapacidades INS</field>
        <field name="sequence" eval="1035" />
        <field name="code">INCINS</field>
        <field name="category_id" ref="hr_salary_rule_category_hr_salary_rule_category_bruto" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            inc = worked_days.dict.get('LEAVE110') and worked_days.LEAVE110.number_of_days or 0.0
            # Adjust inc if all the period has Incapacidades
            days_to_pay = contract.hr_schedule_payment_id.days_to_pay or 0
            adjust_days = payslip.dict.required_adjust_leaves(worked_days)
            inc = inc if not adjust_days else inc * days_to_pay / adjust_days
            result = -(contract.l10n_cr_edi_daily_wage * inc)
        </field>
    </record>
    <record id="hr_rule_l10n_cr_payroll_inc_ccss" model="hr.salary.rule">
        <field name="name">Incapacidades CCSS</field>
        <field name="sequence" eval="1036" />
        <field name="code">INCCCSS</field>
        <field name="category_id" ref="hr_salary_rule_category_hr_salary_rule_category_bruto" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = 0
            inc = worked_days.dict.get('LEAVECR112') and worked_days.LEAVECR112.number_of_days or 0.0
            if inc:
                days = employee.l10n_cr_get_days_ccss(3, payslip.date_from, payslip.date_to)
                # Adjust inc if all the period has Incapacidades
                days_to_pay = contract.hr_schedule_payment_id.days_to_pay or 0
                adjust_days = payslip.dict.required_adjust_leaves(worked_days)
                inc = inc if not adjust_days else inc * days_to_pay / adjust_days
                days = (inc - days) if days &lt; inc else 0
                result = -(contract.l10n_cr_edi_daily_wage * days) if days else 0
        </field>
    </record>
    <record id="hr_rule_l10n_cr_payroll_upaid_leave" model="hr.salary.rule">
        <field name="name">Ausencias</field>
        <field name="sequence" eval="1037" />
        <field name="code">AUS</field>
        <field name="category_id" ref="hr_salary_rule_category_hr_salary_rule_category_bruto" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            inc = worked_days.dict.get('LEAVE90') and worked_days.LEAVE90.number_of_days or 0.0
            inc += worked_days.dict.get('LEAVE100') and worked_days.LEAVE100.number_of_days or 0.0
            # Adjust inc if all the period has Incapacidades
            days_to_pay = contract.hr_schedule_payment_id.days_to_pay or 0
            adjust_days = payslip.dict.required_adjust_leaves(worked_days)
            inc = inc if not adjust_days else inc * days_to_pay / adjust_days
            result = -(contract.l10n_cr_edi_daily_wage * inc)
        </field>
    </record>
    <record id="hr_rule_l10n_cr_payroll_ret_inc" model="hr.salary.rule">
        <field name="name">Retroactivo Incapacidades</field>
        <field name="sequence" eval="1038" />
        <field name="code">RETINC</field>
        <field name="category_id" ref="hr_salary_rule_category_hr_salary_rule_category_bruto" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = inputs.retroactivo_inc and inputs.retroactivo_inc.amount
        </field>
    </record>
    <record id="hr_payslip_input_type_retroactive_inc" model="hr.payslip.input.type">
        <field name="code">retroactivo_inc</field>
        <field name="name">Retroactivo Incapacidades</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_l10n_cr')])]" />
    </record>
    <record id="hr_rule_l10n_cr_payroll_total_smd" model="hr.salary.rule">
        <field name="name">Salario Devengado</field>
        <field name="sequence" eval="1040" />
        <field name="code">BRUTO</field>
        <field name="category_id" ref="hr_salary_rule_category_totals" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = categories.BRUTO + categories.BASIC
        </field>
    </record>

    <!-- Deductions -->
    <record id="hr_rule_l10n_cr_payroll_deduct_ccss" model="hr.salary.rule">
        <field name="name">Cuota Obrera CCSS</field>
        <field name="sequence" eval="5000" />
        <field name="code">D001</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = -(round(BRUTO * contract.company_id.l10n_cr_ccss / 100, 0))
        </field>
    </record>
    <record id="hr_rule_l10n_cr_payroll_deduct_bpdc" model="hr.salary.rule">
        <field name="name">Cuota Obrera BPDC</field>
        <field name="sequence" eval="5010" />
        <field name="code">D002</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = -(round(BRUTO * contract.company_id.l10n_cr_bpdc / 100, 0))
        </field>
    </record>
    <record id="hr_rule_hr_payroll_personal_loan" model="hr.salary.rule">
        <field name="name">Préstamo personal</field>
        <field name="sequence" eval="5020" />
        <field name="code">D003</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = -(inputs.pp_003 and inputs.pp_003.amount)
        </field>
    </record>
    <record id="hr_rule_input_personal_loan" model="hr.payslip.input.type">
        <field name="code">pp_003</field>
        <field name="name">Préstamo personal</field>
        <field name="struct_ids" eval="[(6, 0, [ref('l10n_cr_hr_payroll.payroll_structure_data_l10n_cr')])]" />
    </record>
    <record id="hr_rule_l10n_cr_payroll_deduction_alimony" model="hr.salary.rule">
        <field name="name">Pensión alimenticia</field>
        <field name="sequence" eval="5025" />
        <field name="code">D004</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = 0
            alimony = employee.l10n_cr_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
            if alimony:
                alimony = alimony[0]
                if alimony.discount_type == 'always':
                    result += alimony.discount_amount
                elif alimony.discount_type == 'last_payroll' and payslip.dict.l10n_cr_edi_is_last_payslip():
                    result += alimony.discount_amount
            result = -result
        </field>
    </record>
    <record id="hr_rule_l10n_cr_payroll_total_retenciones" model="hr.salary.rule">
        <field name="name">Total Retenciones Obrera</field>
        <field name="sequence" eval="5030" />
        <field name="code">T002</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = D001 + D002 + D003 + D004
        </field>
    </record>
    <record id="hr_rule_l10n_cr_payroll_renta_neta" model="hr.salary.rule">
        <field name="name">Renta Neta</field>
        <field name="sequence" eval="5050" />
        <field name="code">RENTA</field>
        <field name="category_id" ref="hr_payroll.GROSS" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = 0
            if BRUTO:
                result = -(payslip.env['hr.payslip'].browse(payslip.id).compute_total_rent(inputs, employee, categories))
        </field>
    </record>
    <record id="hr_rule_l10n_cr_payroll_salario_mensual_neto" model="hr.salary.rule">
        <field name="name">Salario Neto</field>
        <field name="sequence" eval="5060" />
        <field name="code">T003</field>
        <field name="category_id" ref="hr_salary_rule_category_netsa" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = BRUTO + T002 + RENTA
        </field>
    </record>
    <!-- Asebanca -->
    <record id="hr_rule_l10n_cr_payroll_asociacion_solidarista_laboral" model="hr.salary.rule">
        <field name="name">ASOCIACIÓN SOLIDARISTA Laboral</field>
        <field name="sequence" eval="10000" />
        <field name="code">P013</field>
        <field name="category_id" ref="hr_salary_rule_category_asociacion_solidarista" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = 0
            if contract.l10n_cr_in_assebanca:
                result = -(round(BRUTO * contract.company_id.l10n_cr_working_asociacion_solidarista / 100, 0))
        </field>
    </record>
    <record id="hr_rule_l10n_cr_payroll_asociacion_solidarista" model="hr.salary.rule">
        <field name="name">ASOCIACIÓN SOLIDARISTA Aporte Patronal</field>
        <field name="sequence" eval="10005" />
        <field name="code">P290</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = 0
            if contract.l10n_cr_in_assebanca:
                result = -(round(BRUTO * 5.33 / 100, 0))
        </field>
    </record>
    <record id="hr_rule_l10n_cr_payroll_ahorro_navideno" model="hr.salary.rule">
        <field name="name">Ahorro Navideño</field>
        <field name="sequence" eval="10010" />
        <field name="code">P014</field>
        <field name="category_id" ref="hr_salary_rule_category_asociacion_solidarista" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = -(contract.l10n_cr_christmas_amount)
        </field>
    </record>
    <record id="hr_rule_l10n_cr_payroll_prestamo_asociacion_solidarista" model="hr.salary.rule">
        <field name="name">Préstamo ASOCIACIÓN SOLIDARISTA</field>
        <field name="sequence" eval="10020" />
        <field name="code">P015</field>
        <field name="category_id" ref="hr_salary_rule_category_asociacion_solidarista" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = inputs.prestamo_asociacion_solidarista and inputs.prestamo_asociacion_solidarista.amount
        </field>
    </record>
    <record id="hr_payslip_input_type_prestamo_asociacion_solidarista" model="hr.payslip.input.type">
        <field name="code">prestamo_asociacion_solidarista</field>
        <field name="name">Préstamo ASOCIACIÓN SOLIDARISTA</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_l10n_cr')])]" />
    </record>
    <record id="hr_rule_l10n_cr_payroll_total_asociacion_solidarista" model="hr.salary.rule">
        <field name="name">Total ASOCIACIÓN SOLIDARISTA</field>
        <field name="sequence" eval="10030" />
        <field name="code">T004</field>
        <field name="category_id" ref="hr_salary_rule_category_asociacion_solidarista" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = P013 + P014 + P015 + P290
        </field>
    </record>
    <!-- Others -->
    <record id="hr_rule_l10n_cr_payroll_retenciones_judiciales" model="hr.salary.rule">
        <field name="name">Retenciones Judiciales</field>
        <field name="sequence" eval="15000" />
        <field name="code">P017</field>
        <field name="category_id" ref="hr_salary_rule_category_other" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = inputs.retenciones_judiciales and inputs.retenciones_judiciales.amount
        </field>
    </record>
    <record id="hr_payslip_input_type_retenciones_judiciales" model="hr.payslip.input.type">
        <field name="code">retenciones_judiciales</field>
        <field name="name">Retenciones Judiciales</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_l10n_cr')])]" />
    </record>
    <record id="hr_rule_l10n_cr_payroll_retenciones_bpdc" model="hr.salary.rule">
        <field name="name">Retenciones BPDC</field>
        <field name="sequence" eval="15010" />
        <field name="code">P018</field>
        <field name="category_id" ref="hr_salary_rule_category_other" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = inputs.retenciones_bpdc and inputs.retenciones_bpdc.amount
        </field>
    </record>
    <record id="hr_payslip_input_type_retenciones_bpdc" model="hr.payslip.input.type">
        <field name="code">retenciones_bpdc</field>
        <field name="name">Retenciones BPDC</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_l10n_cr')])]" />
    </record>
    <record id="hr_rule_l10n_cr_payroll_total_otras_retenciones" model="hr.salary.rule">
        <field name="name">Total Otras Retenciones</field>
        <field name="sequence" eval="15030" />
        <field name="code">T005</field>
        <field name="category_id" ref="hr_salary_rule_category_other" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = P017 + P018
        </field>
    </record>
    <record id="hr_rule_l10n_cr_payroll_salario_mensual_neto2" model="hr.salary.rule">
        <field name="name">Salario Neto a Pagar</field>
        <field name="sequence" eval="100000" />
        <field name="code">NET</field>
        <field name="category_id" ref="hr_salary_rule_category_netsa" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = BRUTO + T002 + RENTA + T004 + T005 + INCMAT + INCPAT - P290
        </field>
    </record>
    <!-- Company -->
    <record id="hr_rule_l10n_cr_payroll_css_patronal" model="hr.salary.rule">
        <field name="name">CCSS PATRONAL</field>
        <field name="sequence" eval="20000" />
        <field name="code">P200</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = -(round(BRUTO * (9.25 / 100), 0))
        </field>
        <field name="appears_on_payslip" eval="False" />
    </record>
    <record id="hr_rule_l10n_cr_payroll_bpdc" model="hr.salary.rule">
        <field name="name">BPDC</field>
        <field name="sequence" eval="20040" />
        <field name="code">P240</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = -(round(BRUTO * (0.5 / 100), 0))
        </field>
        <field name="appears_on_payslip" eval="False" />
    </record>
    <record id="hr_rule_l10n_cr_payroll_ccss_patronal" model="hr.salary.rule">
        <field name="name">CCSS PATRONAL</field>
        <field name="sequence" eval="20050" />
        <field name="code">P250</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = -(round(BRUTO * (5.42 / 100), 0))
        </field>
        <field name="appears_on_payslip" eval="False" />
    </record>
    <record id="hr_rule_l10n_cr_payroll_reg_pens_complementaria" model="hr.salary.rule">
        <field name="name">Regimen Pensión Complementaria</field>
        <field name="sequence" eval="20060" />
        <field name="code">P260</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = -(round(BRUTO * (3 / 100), 0))
        </field>
        <field name="appears_on_payslip" eval="False" />
    </record>
    <record id="hr_rule_l10n_cr_payroll_fcl" model="hr.salary.rule">
        <field name="name">FCL</field>
        <field name="sequence" eval="20070" />
        <field name="code">P270</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = -(round(BRUTO * (1.5 / 100), 0))
        </field>
        <field name="appears_on_payslip" eval="False" />
    </record>
    <record id="hr_rule_l10n_cr_payroll_total_cuotas_patronales" model="hr.salary.rule">
        <field name="name">TOTAL CUOTAS PATRONALES</field>
        <field name="sequence" eval="20080" />
        <field name="code">T007</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = P200 + P210 + P220 + P230 + P240 + P250 + P260 + P270
        </field>
        <field name="appears_on_payslip" eval="False" />
    </record>
    <record id="hr_rule_l10n_cr_payroll_aguinaldo" model="hr.salary.rule">
        <field name="name">AGUINALDO</field>
        <field name="sequence" eval="50000" />
        <field name="code">AGUINALDO</field>
        <field name="category_id" ref="hr_payroll.COMP" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            result = -(BRUTO / 12)
        </field>
        <field name="appears_on_payslip" eval="False" />
    </record>
    <record id="hr_rule_l10n_cr_payroll_maternity" model="hr.salary.rule">
        <field name="name">Licencia por Maternidad</field>
        <field name="sequence" eval="90000" />
        <field name="code">INCMAT</field>
        <field name="category_id" ref="hr_salary_rule_category_hr_salary_rule_category_bruto" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="note">El 50% lo cubre el patrono y el 50% la CCSS.</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
            mat = worked_days.dict.get('LEAVECR111') and worked_days.LEAVECR111.number_of_days or 0.0
            # Adjust mat if all the period has Incapacidades
            days_to_pay = contract.hr_schedule_payment_id.days_to_pay or 0
            adjust_days = payslip.dict.required_adjust_leaves(worked_days)
            mat = mat if not adjust_days else mat * days_to_pay / adjust_days
            result = -(contract.l10n_cr_edi_daily_wage * mat) / 2
        </field>
    </record>
    <record id="hr_rule_l10n_cr_payroll_paternity" model="hr.salary.rule">
        <field name="name">Licencia por Paternidad</field>
        <field name="sequence" eval="91000" />
        <field name="code">INCPAT</field>
        <field name="category_id" ref="hr_salary_rule_category_hr_salary_rule_category_bruto" />
        <field name="struct_id" ref="payroll_structure_data_l10n_cr" />
        <field name="note">El 50% lo cubre el patrono y el 50% la CCSS.</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
pat = worked_days.dict.get('LEAVECR113') and worked_days.LEAVECR113.number_of_days or 0.0
result = -(contract.l10n_cr_edi_daily_wage * pat) / 2
        </field>
    </record>

</odoo>
